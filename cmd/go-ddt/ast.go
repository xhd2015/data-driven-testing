package main

import (
	"go/ast"
	"go/parser"
	"go/token"
	"os"
	"path/filepath"

	"github.com/xhd2015/xgo/support/edit/goedit"
)

const PROLOG = "// generated by go-ddt, DO NOT EDIT."

type astFile struct {
	file string
	code string
	ast  *ast.File
}

func ParseFiles(fset *token.FileSet, dir string, files []string) ([]*astFile, error) {
	astFiles := make([]*astFile, 0, len(files))
	for _, file := range files {
		astFile, err := ParseFile(fset, dir, file)
		if err != nil {
			return nil, err
		}
		astFiles = append(astFiles, astFile)
	}
	return astFiles, nil
}

func ParseFile(fset *token.FileSet, dir string, file string) (*astFile, error) {
	srcFile := filepath.Join(dir, file)

	code, err := os.ReadFile(srcFile)
	if err != nil {
		return nil, err
	}
	parsedAST, err := parser.ParseFile(fset, srcFile, code, parser.ParseComments)
	if err != nil {
		return nil, err
	}
	return &astFile{
		file: file,
		code: string(code),
		ast:  parsedAST,
	}, nil
}

func (c *astFile) newEdit(fset *token.FileSet) *goedit.Edit {
	return goedit.New(fset, c.code)
}
